[versions]
agp = "8.5.0"
kotlin = "1.9.24"
ksp = "1.9.24-1.0.20"
coroutines = "1.8.1"
coreKtx = "1.13.1"
# region testing
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
# endregion testing
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.9.0"
constraintlayout = "2.1.4"
hilt = "2.51.1"
hiltCompiler = "1.2.0"
activity-ktx = "1.9.0"
fragment-ktx = "1.8.0"
lifecycle = "2.8.2"
ktlint = "12.1.1"
spotless = "6.25.0"
lifecycleExtensions = "2.2.0"
lottie-progress = "1.0.1"
numericKeyboard = "1.2.0"
retrofit = "2.11.0"
gson = "2.10.1"
okHttp = "4.12.0"

room = "2.6.1"
datastorePreferences = "1.1.1"
preference-ktx = "1.2.1"

chucker = "4.0.0"
viewpump = "2.1.1"
calligraphy3 = "3.1.1"
coil = "2.6.0"
popupDialog = "1.0.5"
quickieBundled = "1.9.0"
navigation-component = "2.7.7"
secrets-gradle-plugin = "2.0.1"
sentry = "7.0.0"
signatureView = "0.1.2"
swiperefreshlayout = "1.1.0"
timber = "5.0.1"
usdk = "4.1.5"
workRuntimeKtx = "2.9.0"
xdp = "1.1.0"
zxing = "3.5.3"
playServicesLocation = "21.3.0"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
# region  preferences
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preference-ktx" }
# endregion  preferences
# region Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }
# endregion Coil
# region chucker
chucker-release = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }
chucker-debug = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
# endregion chucker
# region Navigation
safe-args-gradle-plugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation-component" }
navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation-component" }
navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation-component" }
# endregion Navigation
# region Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
# endregion Retrofit
# region OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
# endregion OkHttp
# region Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltCompiler" }
hilt-lifecycle-viewmodel = { module = "androidx.hilt:hilt-lifecycle-viewmodel", version.ref = "hiltCompiler" }
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hiltCompiler" }
# endregion Hilt
# region Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
# endregion Coroutines
# region Lifecycle
lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
# endregion Lifecycle
# region kotlin
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
# endregion kotlin
# region Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
# endregion Room
# region SDP
sdp-android = { module = "com.intuit.sdp:sdp-android", version.ref = "xdp" }
ssp-android = { module = "com.intuit.ssp:ssp-android", version.ref = "xdp" }
# endregion SDP
# region Sentry
sentry-android = { module = "io.sentry:sentry-android", version.ref = "sentry" }
sentry-android-fragment = { module = "io.sentry:sentry-android-fragment", version.ref = "sentry" }
sentry-android-timber = { module = "io.sentry:sentry-android-timber", version.ref = "sentry" }
sentry-android-navigation = { module = "io.sentry:sentry-android-navigation", version.ref = "sentry" }
sentry-android-sqlite = { module = "io.sentry:sentry-android-sqlite", version.ref = "sentry" }
sentry-android-okhttp = { module = "io.sentry:sentry-android-okhttp", version.ref = "sentry" }
# endregion Sentry
# region zxing
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing" }
zxing-parent = { module = "com.google.zxing:zxing-parent", version.ref = "zxing" }
# endregion zxing
# region calligraphy3
viewpump = { module = "io.github.inflationx:viewpump", version.ref = "viewpump" }
calligraphy3 = { module = "io.github.inflationx:calligraphy3", version.ref = "calligraphy3" }
# endregion calligraphy3


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }